# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/


worker_processes auto;
error_log /var/opt/rh/rh-nginx112/log/nginx/error.log;
pid /var/opt/rh/rh-nginx112/run/nginx/nginx.pid;

# Load dynamic modules. See /opt/rh/rh-nginx112/root/usr/share/doc/README.dynamic.
include /opt/rh/rh-nginx112/root/usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/opt/rh/rh-nginx112/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    include       /etc/opt/rh/rh-nginx112/nginx/mime.types;
    default_type  application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /opt/app-root/etc/nginx.d/*.conf;
    #include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*.conf;
    server_names_hash_bucket_size 64;

    server {
      listen       8090 default_server;
      listen       [::]:8090 default_server;
      server_name  _;
      server_tokens off;

      # Max request size
      client_max_body_size 20M;
      large_client_header_buffers 4 256k;

      root /dev/learninglocker/ui/dist/public;

      # xAPI endpoints
      location ~* ^/data/xAPI(.*)$ {
	      dav_methods PUT DELETE MKCOL COPY MOVE;

	      # Preflighted requestis
	      if ($request_method = OPTIONS) {
		add_header "Access-Control-Allow-Origin" *;
		add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
		add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept,X-Experience-API-Version";
		return 200;
	      }

	      # CORS WHITELIST EVERYTHING
	      # This is allowing everything because I am running
	      # locally so there should be no security issues.
	      if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
		add_header "Access-Control-Allow-Origin" *;
		add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept,X-Experience-API-Version";
	      }
        proxy_pass http://learninglocker:8081/data/xAPI$1$is_args$args;
      }

      # API endpoints
      location = /api {
        rewrite /api / break;
        proxy_redirect off;
        proxy_pass http://learninglocker:8080;
      }

      location ~* ^/api(.*)$ {
        proxy_pass http://learninglocker:8080$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

      # All other traffic directed to statics or Node server
      location / {
	      dav_methods PUT DELETE MKCOL COPY MOVE;

	      # Preflighted requestis
	      if ($request_method = OPTIONS) {
		add_header "Access-Control-Allow-Origin" *;
		add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE";
		add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept,X-Experience-API-Version";
		return 200;
	      }

	      # CORS WHITELIST EVERYTHING
	      # This is allowing everything because I am running
	      # locally so there should be no security issues.
	      if ($request_method = (GET|POST|OPTIONS|HEAD|DELETE)) {
		add_header "Access-Control-Allow-Origin" *;
		add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept,X-Experience-API-Version";
	      }
		try_files $uri @node_server;
      }

      # Node UI server
      location @node_server {
        proxy_pass http://learninglocker:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

      # Load configuration files for the default server block.
      error_page 404 /404.html;
      location = /40x.html {
        root /opt/rh/rh-nginx112/root/usr/share/nginx/html;
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /opt/rh/rh-nginx112/root/usr/share/nginx/html;
      }

      # We don't need .ht files with nginx.
      location ~ /\.ht {
        deny all;
      }
    }

}
